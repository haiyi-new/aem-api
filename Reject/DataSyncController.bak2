using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;

namespace MyWebApi
{
    [Route("api/[controller]")]
    public class DataSyncController : ControllerBase
    {
        private readonly string _loginUrl = "http://test-demo.aemenersol.com/api/Account/Login";
        private readonly string _dashboardUrl = "http://test-demo.aemenersol.com/api/Dashboard";
        private readonly string _username = "user@aemenersol.com";
        private readonly string _password = "Test@123";
        private string _apiKey;

        [HttpGet]
        public async Task<IActionResult> SyncData()
        {
            try
            {
                // Login to get the API key
                _apiKey = await Login();

                // Access the dashboard data using the obtained API key
                using var httpClient = new HttpClient();
                httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", _apiKey);
                var response = await httpClient.GetAsync(_dashboardUrl);

                if (!response.IsSuccessStatusCode)
                {
                    return BadRequest(new { message = $"Failed to access dashboard data: {response.StatusCode}" });
                }

                var responseData = await response.Content.ReadAsStringAsync();

                // Process the retrieved data (you can store it in your database)
                // Example: store data in database using _connectionString

                return Ok(responseData);
            }
            catch (Exception ex)
            {
                return BadRequest(new { message = $"Error syncing data: {ex.Message}" });
            }
        }

        private async Task<string> Login()
        {
            using var httpClient = new HttpClient();
            var loginData = new { username = _username, password = _password };
            var content = new StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(loginData), Encoding.UTF8, "application/json");
            var response = await httpClient.PostAsync(_loginUrl, content);

            if (!response.IsSuccessStatusCode)
            {
                throw new Exception($"Failed to login: {response.StatusCode}");
            }

            var responseData = await response.Content.ReadAsStringAsync();
            // Assuming the response contains the API key directly
            return responseData.Trim('"'); // Remove double quotes if present
        }
    }
}
